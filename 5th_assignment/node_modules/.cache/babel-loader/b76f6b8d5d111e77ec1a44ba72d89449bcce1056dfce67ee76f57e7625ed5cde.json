{"ast":null,"code":"import axios from \"axios\";\nconst server = process.env.REACT_APP_API_URL;\n\n// 여기서 중요한 점은 서버의 주소를 어떻게 완성하느냐입니다. 스웨거를 잘 확인하고 서버에게 어떻게 주소를 보낼 수 있을 지 생각해보세요.\n// 템플릿 리터럴 (``) 을 이용해서 표현식을 잘 다룰 수 있도록 해봅시다.\n\nexport const getMembersAPI = async part => {\n  try {\n    //your code here\n    const response = await axios.get('http://ec2-13-209-3-68.ap-northeast-2.compute.amazonaws.com:8080/user?part=all', part);\n    return response;\n  } catch (error) {\n    console.error(\"Error fetching(part) user data:\", error);\n    throw error;\n  }\n};\nexport const postMemberAPI = async data => {\n  try {\n    //your code here\n    const response = await axios.post(\"http://localhost:3000/\", data);\n    return response;\n  } catch (error) {\n    console.error(\"Error updating user data:\", error);\n    throw error;\n  }\n};\n\n// 아래의 API는 클백세미나 때 진행할 예정입니다.\n\nexport const putMemberAPI = async (id, data) => {\n  try {\n    //your code here\n  } catch (error) {\n    console.error(\"Error updating user data:\", error);\n    throw error;\n  }\n};\nexport const deleteMemberAPI = async id => {\n  try {\n    //your code here\n  } catch (error) {\n    console.error(\"Error deleting user data:\", error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","server","process","env","REACT_APP_API_URL","getMembersAPI","part","response","get","error","console","postMemberAPI","data","post","putMemberAPI","id","deleteMemberAPI"],"sources":["/Users/gim-uhyeon/Desktop/KimWooHyun/5th_assignment/src/API/AxiosAPI.js"],"sourcesContent":["import axios from \"axios\";\n\nconst server = process.env.REACT_APP_API_URL;\n\n// 여기서 중요한 점은 서버의 주소를 어떻게 완성하느냐입니다. 스웨거를 잘 확인하고 서버에게 어떻게 주소를 보낼 수 있을 지 생각해보세요.\n// 템플릿 리터럴 (``) 을 이용해서 표현식을 잘 다룰 수 있도록 해봅시다.\n\nexport const getMembersAPI = async (part) => {\n    try {\n        //your code here\n        const response = await axios.get('http://ec2-13-209-3-68.ap-northeast-2.compute.amazonaws.com:8080/user?part=all',part);\n        return response;\n    } catch (error) {\n        console.error(\"Error fetching(part) user data:\", error);\n        throw error;\n    }\n};\n\n\nexport const postMemberAPI = async (data) => {\n    try {\n        //your code here\n        const response = await axios.post(\"http://localhost:3000/\",data);\n        return response;\n    } catch (error) {\n        console.error(\"Error updating user data:\", error);\n        throw error;\n    }\n};\n\n\n// 아래의 API는 클백세미나 때 진행할 예정입니다.\n\nexport const putMemberAPI = async (id, data) => {\n    try {\n        //your code here\n        \n    } catch (error) {\n        console.error(\"Error updating user data:\", error);\n        throw error;\n    }\n};\n\n\nexport const deleteMemberAPI = async (id) => {\n    try {\n        //your code here\n\n    } catch (error) {\n        console.error(\"Error deleting user data:\", error);\n        throw error;\n    }\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,MAAM,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB;;AAE5C;AACA;;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAOC,IAAI,IAAK;EACzC,IAAI;IACA;IACA,MAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAAC,gFAAgF,EAACF,IAAI,CAAC;IACvH,OAAOC,QAAQ;EACnB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;IACvD,MAAMA,KAAK;EACf;AACJ,CAAC;AAGD,OAAO,MAAME,aAAa,GAAG,MAAOC,IAAI,IAAK;EACzC,IAAI;IACA;IACA,MAAML,QAAQ,GAAG,MAAMP,KAAK,CAACa,IAAI,CAAC,wBAAwB,EAACD,IAAI,CAAC;IAChE,OAAOL,QAAQ;EACnB,CAAC,CAAC,OAAOE,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACjD,MAAMA,KAAK;EACf;AACJ,CAAC;;AAGD;;AAEA,OAAO,MAAMK,YAAY,GAAG,MAAAA,CAAOC,EAAE,EAAEH,IAAI,KAAK;EAC5C,IAAI;IACA;EAAA,CAEH,CAAC,OAAOH,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACjD,MAAMA,KAAK;EACf;AACJ,CAAC;AAGD,OAAO,MAAMO,eAAe,GAAG,MAAOD,EAAE,IAAK;EACzC,IAAI;IACA;EAAA,CAEH,CAAC,OAAON,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACjD,MAAMA,KAAK;EACf;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}